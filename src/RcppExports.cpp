// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// systematic_resampling
IntegerVector systematic_resampling(const NumericVector W);
RcppExport SEXP _smc_systematic_resampling(SEXP WSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector >::type W(WSEXP);
    rcpp_result_gen = Rcpp::wrap(systematic_resampling(W));
    return rcpp_result_gen;
END_RCPP
}
// parallelVectorSum
double parallelVectorSum(NumericVector x);
RcppExport SEXP _smc_parallelVectorSum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(parallelVectorSum(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_smc_systematic_resampling", (DL_FUNC) &_smc_systematic_resampling, 1},
    {"_smc_parallelVectorSum", (DL_FUNC) &_smc_parallelVectorSum, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_smc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
